[Tests]
  design = "Coupleable.md"
  [test]
    type = 'Exodiff'
    input = 'ad_coupled_value.i'
    exodiff = 'ad_coupled_value_out.e'
    requirement = "Coupled variable value Jacobian entries generated with AD shall be accurate"
    issues = "#5658"
  []
  [test_coupled_aux]
    type = 'Exodiff'
    input = 'ad_aux_coupled_value.i'
    exodiff = 'ad_aux_coupled_value_out.e'
    requirement = "We shall be able to get aux variable values through adCoupledValue with the knowledge that the derivatives will always be zero"
    issues = "#12852"
    max_parallel = 4
  []
  [test_coupled_aux_jac]
    type = 'PetscJacobianTester'
    input = 'ad_aux_coupled_value.i'
    run_sim = True
    ratio_tol = 1e-8
    difference_tol = 1e-7
    max_parallel = 4
    cli_args = 'Outputs/exodus=false'
    requirement = "Getting a *constant* aux variable through adCoupledValue shall not destroy our Jacobian"
    issues = "#12852"
  []
  [test_coupled_dot_aux]
    type = 'Exodiff'
    input = 'ad_aux_coupled_time_value.i'
    exodiff = 'ad_aux_coupled_time_value_out.e'
    requirement = "We shall be able to get dot aux variable values through adCoupledValue with the knowledge that the time derivatives will always be zero"
    issues = "#12996"
    max_parallel = 4
  []
  [test_ad_output]
    type = 'RunApp'
    input = 'ad_coupled_value.i'
    expect_out = 'AD size required:\s+27'
    requirement = 'The system will output the required number of derivative entries needed for automatic differentiation calculations'
    design = 'DualReal.md'
    cli_args = 'Outputs/exodus=false'
    issues = '#5658'
    ad_mode = 'NONSPARSE'
  []
[]
